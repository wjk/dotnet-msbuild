trigger:
- master
- exp/*
- vs*

jobs:
- job: BootstrapMSBuildOnFullFrameworkWindows
  displayName: "Windows Full"
  pool:
    vmImage: 'windows-2019'
  steps:
  - task: BatchScript@1
    displayName: cibuild_bootstrapped_msbuild.cmd
    inputs:
      filename: 'eng/cibuild_bootstrapped_msbuild.cmd'
  - task: PublishTestResults@2
    displayName: Publish .NET Framework Test Results
    inputs:
      testRunTitle: 'Windows-on-full Full Framework'
      testRunner: XUnit
      testResultsFiles: 'artifacts/TestResults/Debug/*UnitTests_net472*.xml'
      publishRunAttachments: true
      mergeTestResults: true
    continueOnError: true
    condition: always()
  - task: PublishTestResults@2
    displayName: Publish .NET Core 2.1 Test Results
    inputs:
      testRunTitle: 'Windows-on-full .NET Core 2.1'
      testRunner: XUnit
      testResultsFiles: 'artifacts/TestResults/Debug/*UnitTests_netcoreapp2.1*.xml'
      publishRunAttachments: true
      mergeTestResults: true
    continueOnError: true
    condition: always()
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: logs'
    inputs:
      PathtoPublish: 'artifacts/log/Debug'
      ArtifactName: 'FullOnWindows build logs'
    continueOnError: true
    condition: always()
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: TestResults'
    inputs:
      PathtoPublish: 'artifacts/TestResults'
      ArtifactName: 'FullOnWindows test logs'
    continueOnError: true
    condition: always()

- job: BootstrapMSBuildOnCoreWindows
  displayName: "Windows Core"
  pool:
    vmImage: 'windows-2019'
  steps:
  - task: BatchScript@1
    displayName: cibuild_bootstrapped_msbuild.cmd
    inputs:
      filename: 'eng/cibuild_bootstrapped_msbuild.cmd'
      arguments: '-msbuildEngine dotnet'
  - task: PublishTestResults@2
    displayName: Publish .NET Framework Test Results
    inputs:
      testRunTitle: 'Windows-on-Core Full Framework'
      testRunner: XUnit
      testResultsFiles: 'artifacts/TestResults/Debug/*UnitTests_net472*.xml'
      publishRunAttachments: true
      mergeTestResults: true
    continueOnError: true
    condition: always()
  - task: PublishTestResults@2
    displayName: Publish .NET Core 2.1 Test Results
    inputs:
      testRunTitle: 'Windows-on-Core .NET Core 2.1'
      testRunner: XUnit
      testResultsFiles: 'artifacts/TestResults/Debug/*UnitTests_netcoreapp2.1*.xml'
      publishRunAttachments: true
      mergeTestResults: true
    continueOnError: true
    condition: always()
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: logs'
    inputs:
      PathtoPublish: 'artifacts/log/Debug'
      ArtifactName: 'CoreOnWindows build logs'
    continueOnError: true
    condition: always()
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: TestResults'
    inputs:
      PathtoPublish: 'artifacts/TestResults'
      ArtifactName: 'CoreOnWindows test logs'
    continueOnError: true
    condition: always()

- job: FullReleaseOnWindows
  displayName: "Windows Full Release (no bootstrap)"
  pool:
    vmImage: 'windows-2019'
  steps:
  - task: BatchScript@1
    displayName: cibuild.cmd
    inputs:
      filename: 'eng/cibuild.cmd'
      arguments: '-configuration Release -test'
  - task: PublishTestResults@2
    displayName: Publish .NET Framework Test Results
    inputs:
      testRunTitle: 'Windows-on-full Release Full Framework'
      testRunner: XUnit
      testResultsFiles: 'artifacts/TestResults/Release/*UnitTests_net472*.xml'
      publishRunAttachments: true
      mergeTestResults: true
    continueOnError: true
    condition: always()
  - task: PublishTestResults@2
    displayName: Publish .NET Core 2.1 Test Results
    inputs:
      testRunTitle: 'Windows-on-full Release .NET Core 2.1'
      testRunner: XUnit
      testResultsFiles: 'artifacts/TestResults/Release/*UnitTests_netcoreapp2.1*.xml'
      publishRunAttachments: true
      mergeTestResults: true
    continueOnError: true
    condition: always()
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: logs'
    inputs:
      PathtoPublish: 'artifacts/Log/Release'
      ArtifactName: 'FullOnWindows Release build logs'
    continueOnError: true
    condition: always()
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: TestResults'
    inputs:
      PathtoPublish: 'artifacts/TestResults'
      ArtifactName: 'FullOnWindows Release test logs'
    continueOnError: true
    condition: always()

- job: CoreBootstrappedOnLinux
  displayName: "Linux Core"
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - bash: . 'eng/cibuild_bootstrapped_msbuild.sh'
    displayName: CI Build
  - task: PublishTestResults@2
    displayName: Publish .NET Core 2.1 Test Results
    inputs:
      testRunTitle: 'Linux .NET Core 2.1'
      testRunner: XUnit
      testResultsFiles: 'artifacts/TestResults/Debug/*UnitTests*.xml'
      publishRunAttachments: true
      mergeTestResults: true
    continueOnError: true
    condition: always()
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: logs'
    inputs:
      PathtoPublish: 'artifacts/log/Debug'
      ArtifactName: 'CoreOnLinux build logs'
    continueOnError: true
    condition: always()
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: TestResults'
    inputs:
      PathtoPublish: 'artifacts/TestResults'
      ArtifactName: 'CoreOnLinux test logs'
    continueOnError: true
    condition: always()

- job: CoreOnMac
  displayName: "macOS Core"
  pool:
    vmImage: 'macOS-10.14'
  steps:
  - bash: . 'eng/cibuild_bootstrapped_msbuild.sh'
    displayName: CI Build
  - task: PublishTestResults@2
    displayName: Publish .NET Core 2.1 Test Results
    inputs:
      testRunTitle: 'macOS .NET Core 2.1'
      testRunner: XUnit
      testResultsFiles: 'artifacts/TestResults/Debug/*UnitTests*.xml'
      publishRunAttachments: true
      mergeTestResults: true
    continueOnError: true
    condition: always()
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: logs'
    inputs:
      PathtoPublish: 'artifacts/log/Debug'
      ArtifactName: 'CoreOnMac build logs'
    continueOnError: true
    condition: always()
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: TestResults'
    inputs:
      PathtoPublish: 'artifacts/TestResults'
      ArtifactName: 'CoreOnMac test logs'
    continueOnError: true
    condition: always()

- job: MonoOnMac
  displayName: "macOS Mono"
  pool:
    vmImage: 'macOS-10.14'
  steps:
  # https://docs.microsoft.com/en-us/azure/devops/pipelines/agents/hosted?view=azure-devops&tabs=yaml#mono
  - bash: |
      SYMLINK=6_4_2
      MONOPREFIX=/Library/Frameworks/Mono.framework/Versions/$SYMLINK
      echo "##vso[task.setvariable variable=DYLD_FALLBACK_LIBRARY_PATH;]$MONOPREFIX/lib:/lib:/usr/lib:$DYLD_LIBRARY_FALLBACK_PATH"
      echo "##vso[task.setvariable variable=PKG_CONFIG_PATH;]$MONOPREFIX/lib/pkgconfig:$MONOPREFIX/share/pkgconfig:$PKG_CONFIG_PATH"
      echo "##vso[task.setvariable variable=PATH;]$MONOPREFIX/bin:$PATH"
    displayName: Use Mono 6.4.2
  - bash: 'eng/cibuild_bootstrapped_msbuild.sh --host_type mono /p:SuppressLicenseValidation=true'
    displayName: CI Build
  - task: PublishTestResults@2
    displayName: Publish Mono Test Results
    inputs:
      testRunTitle: 'macOS Mono'
      testRunner: XUnit
      testResultsFiles: 'artifacts/TestResults/Debug-MONO/*UnitTests*.xml'
      publishRunAttachments: true
      mergeTestResults: true
    continueOnError: true
    condition: always()
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: logs'
    inputs:
      PathtoPublish: 'artifacts/log'
      ArtifactName: 'MonoOnMac build logs'
    condition: always()
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: TestResults'
    inputs:
      PathtoPublish: 'artifacts/TestResults'
      ArtifactName: 'MonoOnMac test logs'
    continueOnError: true
    condition: always()
